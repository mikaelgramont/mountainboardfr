<?php
/**
 * VARIABLES
 */
$tags = $this->keywords = $this->media->getTags();
$editable = $this->media->isEditableBy($this->user, $this->acl);
$description = $this->media->getDescription();
if($this->media->mediaType == Media_Item::TYPE_PHOTO){
	$prev = 'prevPhoto';
	$next = 'nextPhoto';
	$inMedia = 'ridersInPhoto';
	$mediaClass = 'photo';
} else {
	$prev = 'prevVideo';
	$next = 'nextVideo';
	$inMedia = 'ridersInVideo';
	$mediaClass = 'video';
}
$renderer = $this->mediaDisplay();

/**
 * FUNCTIONS 
 */
function nextPrevMeta($prev, $next, $view)
{
	if(!empty($prev)){
		$view->headLink()->headLink(array(
			'rel' => 'prev',
			'href' => $prev->getLink()
		));
	}
	
	if(!empty($next)){
		$view->headLink()->headLink(array(
			'rel' => 'next',
			'href' => $next->getLink()
		));
	}
}

function renderHeaderCard($media, $album, $editable, $view)
{
	$backToAlbum = sprintf($view->translate('backToAlbum'),	$album->getTitle());
	
	$content = '';
	$content .= '<div class="card albumHeader">'.PHP_EOL;
	$content .= '	<h1 id="mainTitle" class="mediaTitle">'.PHP_EOL;
	$content .= '		'.ucfirst($media->getTitle()).PHP_EOL;
	if($editable){
		$content .= '	<div class="mediaEditLinks">'.PHP_EOL;
		if($media->mediaType == Media_Item::TYPE_PHOTO){
			$content .= '		'.$view->mediaPhotoRotateLinks($media).PHP_EOL;
		}
		$content .= '		'.$view->itemStatus($media).PHP_EOL;
		$content .= '		'.$view->editLink($media).PHP_EOL;
		$content .= '		'.$view->deleteLink($media).PHP_EOL;
		$content .= '	</div>'.PHP_EOL;
	}
	$content .= '	</h1>'.PHP_EOL;
	$content .= '	<div>'.PHP_EOL;
	$content .= '		<div id="backToAlbum" class="actionLinkContainer">'.PHP_EOL;
	$content .= '			'.$view->itemLink(
		array(
			'name' => $backToAlbum,
			'link' => $album->getLink(),
			'itemType' => Constants_DataTypes::MEDIAALBUM
		), 'dataLink album').PHP_EOL;
	$content .= '		</div>'.PHP_EOL;
	$content .= '	</div>'.PHP_EOL;
	$content .= '</div>'.PHP_EOL;
	return $content;
}

function renderSubHeaderCard($prev, $next, $view)
{
	$content = '';
	if(!empty($prev) || !empty($next)){
		$content .= '<div class="card albumHeader">'.PHP_EOL;
		if(!empty($prev)){
			$link = $prev->getLink();
			$content .= '	<div class="actionLinkContainer prevMedia">'.PHP_EOL;
			$content .= $view->itemLink($prev, 'linkLeft', 'prev').PHP_EOL;
			$content .='	</div>'.PHP_EOL;
		}
		if(!empty($next)){
			$link = $next->getLink();
			$content .= '	<div class="actionLinkContainer nextMedia">'.PHP_EOL;
			$content .= $view->itemLink($next, 'linkRight', 'next').PHP_EOL;
			$content .= '	</div>'.PHP_EOL;
		}
		$content .= '</div>'.PHP_EOL;
	}
	return $content;
}

function maybeRenderMetadata($media, $renderer, $spot, $trick, $riders, $tags, $inMedia, $view)
{
	$renderAlternateLink = $media->mediaType == Media_Item::TYPE_VIDEO;
	if(Utils::allEmpty($spot, $trick, $riders['byId'], $riders['byName'],
		$tags, $renderAlternateLink)) {
		return '';
	}

	$content = '		<div class="mediaMetadataLinks deemphasized-text">'.PHP_EOL;
	$content .= maybeRenderAttributions($spot, $trick, $riders, $inMedia, $view);
	$content .= $view->renderTags($tags);
	if ($renderAlternateLink) {
		$content .= $renderer->alternateLink($media);
	}
	$content .= '		</div>'.PHP_EOL;
	return $content;
}

function maybeRenderAttributions($spot, $trick, $riders, $inMedia, $view)
{
	if (Utils::allEmpty($spot, $trick, $riders['byId'], $riders['byName'])) {
		return '';
	}
	$content = '			<li>'.$inMedia.':</li>'.PHP_EOL;
	
	if(!empty($riders['byId']) || !empty($riders['byName'])){
		$linkString = array();
		foreach($riders['byId'] as $rider){
			$linkString[] = $view->userLink($rider);
		}
		foreach($riders['byName'] as $rider){
			$linkString[] = $rider;
		}
		$content .= '		<li>' .implode(', ', $linkString) .'</li>'.PHP_EOL;
	}
	if(!empty($trick)){
		$content .= '		<li>'.$view->itemLink($trick).'</li>'.PHP_EOL;
	}
	if(!empty($spot)){
		$content .= '		<li>'.$view->itemLink($spot).'</li>'.PHP_EOL;
	}
	
	$content .= '		</ul>'.PHP_EOL;
	return $content;
}

function maybeRenderDescription($description)
{
	if(!empty($description)){
		return '		<div class="mediaDescription">'.$description.'</div>'.PHP_EOL;
	}
	return '';
}

function maybeRenderMapCard($media, $view)
{
	if (!$media->hasLocation()) {
		return '';
	}
	
	$mapElementId = 'simpleMapElement';
	$location = $media->getLocation();
	$location->zoom = DEFAULT_MEDIA_MAP_ZOOM;
	$view->googleMaps()->displayItem($location, array(
		'mapElementId' => $mapElementId));
	
	$content = '<div class="card">'.PHP_EOL;
	$content .= '	<div class="mediaMetadataMap">'.PHP_EOL;
	$content .= '   	<div id="'.$mapElementId.'">'.PHP_EOL;
	$content .= '			<img src="'.$view->staticGoogleMap($location, 288, 288).'" alt="" />'.PHP_EOL;
	$content .= '		</div>'.PHP_EOL;
	$content .= '	</div>'.PHP_EOL;
	$content .= '</div>'.PHP_EOL;
	return $content;
}

function renderCommentsCard($comments, $media, $lastLogin, $view)
{
	$content = '<div class="card">'.PHP_EOL;
	$content .= '	'.$view->renderComments($comments, $media, $lastLogin);
	$content .= '</div>'.PHP_EOL;
	return $content;
}

/**
 * METAS
 */
$this->headTitle(ucfirst($this->media->getTitle()));
$this->openGraph()->forMedia($this->media);
nextPrevMeta($this->previousMedia, $this->nextMedia, $this);

/**
 * RENDERING
 * 
 */
echo renderHeaderCard($this->media, $this->album, $editable, $this);

echo renderSubHeaderCard($this->previousMedia, $this->nextMedia, $this);

echo '<div class="card mediaCard">'.PHP_EOL;
echo '	<div class="media '.$mediaClass.'">'.PHP_EOL;
echo '		<div class="mediaElement">'.PHP_EOL;
echo $renderer->render($this->media, $editable).PHP_EOL;
echo '		</div>'.PHP_EOL;
echo '		<div class="mediaMetadata">'.PHP_EOL;
echo '			<div class="mediaMetadataText">'.PHP_EOL;
echo $this->renderMediaInformation($this->media);
echo maybeRenderMetadata($this->media, $renderer, $this->spot,
		$this->trick, $this->riders, $tags,
		ucfirst($this->translate($inMedia)), $this);
echo '			</div>'.PHP_EOL;
echo maybeRenderDescription($description);
echo $this->shareButtons()->all(APP_URL.$this->url(), 'horizontal').PHP_EOL;
echo '		</div>'.PHP_EOL;
echo '	</div>'.PHP_EOL;
echo '</div>'.PHP_EOL;

echo maybeRenderMapCard($this->media, $this);

echo renderCommentsCard($this->comments, $this->media, $this->lastLogin, $this);

